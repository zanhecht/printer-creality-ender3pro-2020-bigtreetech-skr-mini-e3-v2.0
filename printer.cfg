# /home/pi/printer_data/config/printer.cfg

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

######################################################################
#
# Printer configuration
#
######################################################################

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC2
position_endstop: 0.0
position_max: 250
position_min: -0.5

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
max_extrude_only_distance: 100.0    
max_extrude_only_velocity: 25
max_extrude_only_accel: 1000
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 16
#rotation_distance: 34.406
rotation_distance: 32.789
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
pressure_advance: 0.95

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[fan]
pin: PC6

[temperature_sensor mcu]
sensor_type: temperature_mcu
#sensor_mcu: mcu
#sensor_temperature1:
#sensor_adc1:
#sensor_temperature2:
#sensor_adc2:

[temperature_sensor pi]
sensor_type: temperature_host
#sensor_path:

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD8053046413014690143-if00

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 1000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0

# Pin mappings for BL_T port
[bltouch]
stow_on_each_sample: False
probe_with_touch_mode: True
sensor_pin: ^PC14
control_pin: PA1
x_offset: -45.5
y_offset: -6.5
#z_offset: 3
samples: 3
samples_tolerance_retries: 3

[bed_screws]
screw1: 30, 30
screw2: 205, 30
screw3: 30, 205
screw4: 205, 205

[screws_tilt_adjust]
screw1: 91, 36.5
screw1_name: front left screw
screw2: 235, 36.5
screw2_name: front right screw
screw3: 91, 211.5
screw3_name: rear left screw
screw4: 235, 211.5
screw4_name: rear right screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M4

[bed_mesh]
speed: 120
horizontal_move_z: 7.5
mesh_min: 50, 50
mesh_max: 185, 185
probe_count: 4, 4
mesh_pps: 2, 2
algorithm: bicubic

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
# Silent at power on
shutdown_value: 0
# Disable at emergency shutdown
cycle_time: 0.001

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix:

######################################################################
#
# GCode Macros
#
######################################################################

######################################################################
# Beeper
######################################################################

[gcode_macro M300]
gcode: # Implement beeper
  {% set S = params.S|default(2000)|int %} ; Default 1kHz if S is omitted
  {% set P = params.P|default(100)|int %} ; Default 10ms duration if P is omitted
  {% if S > 0 %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S }
    {% if P >= 0 %} ; Play forever if P=-1
      G4 P{P}
      SET_PIN PIN=beeper VALUE=0
    {% endif %}
  {% else %} ; S=-1 to stop tones
    SET_PIN PIN=beeper VALUE=0
  {% endif %}

[gcode_macro _START_BEEP]
gcode:
  # Calculate the below arrays using https://github.com/zanhecht/printer-creality-ender3pro-2020-bigtreetech-skr-mini-e3-v2.0/blob/main/NotestoFreqs.xlsm
  #{% set tones     = [392.0, 293.66, 392.0, 440.0, 493.88, 587.33, 523.25, 440.0, 493.88, 392.0, 329.63, 440.0, 369.99, 329.63, 369.99, 329.63, 293.66, 392.0, 293.66, 392.0, 440.0, 493.88, 587.33, 523.25, 440.0, 493.88, 392.0, 329.63, 440.0, 369.99, 329.63, 369.99, 293.66, 392.0] %}
  #{% set durations = [250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 125, 125, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 125, 125, 125, 125, 500] %}
  {% set tones     = [392.0, 293.66, 392.0, 440.0, 493.88, 587.33, 523.25, 440.0, 493.88, 392.0, 329.63, 440.0, 369.99, 329.63, 369.99, 329.63, 293.66] %}
  {% set durations = [250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 125, 125, 250] %}
  {% if tones|length == durations|length() %}
    {% for tone in tones %}
      {% if tone > 0 %}
        M300 S{tone} P-1 ; Play tone forever
      {% else %}
        M300 S-1 ; A tone of 0 is silent
      {% endif %}
      G4 P{durations[loop.index0]} ; Hold note for duration
    {% endfor %}
    M300 S-1 ; Stop playback at end
  {% else %}
    RESPOND TYPE=error MSG='Error in _START_BEEP: Number of tones does not equal number of durations'
  {% endif %}

[gcode_macro _FINISH_BEEP]
gcode:
  # Calculate the below arrays using https://github.com/zanhecht/printer-creality-ender3pro-2020-bigtreetech-skr-mini-e3-v2.0/blob/main/NotestoFreqs.xlsm
  {% set tones     = [392.0, 440.0, 493.88, 392.0, 440.0, 493.88, 523.25, 440.0, 493.88, 523.25, 587.33, 493.88, 523.25, 587.33, 659.25, 739.99, 783.99, 880.0, 987.77, 783.99, 880.0, 987.77, 880.0, 783.99, 739.99, 659.25, 369.99, 293.66, 783.99] %}
  {% set durations = [125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 500] %}
  #{% set tones     = [783.99, 880.0, 987.77, 783.99, 880.0, 987.77, 880.0, 783.99, 739.99, 659.25, 369.99, 293.66, 783.99] %}
  #{% set durations = [125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 500] %}
  {% if tones|length == durations|length() %}
    {% for tone in tones %}
      {% if tone > 0 %}
        M300 S{tone} P-1 ; Play tone forever
      {% else %}
        M300 S-1 ; A tone of 0 is silent
      {% endif %}
      G4 P{durations[loop.index0]} ; Hold note for duration
    {% endfor %}
    M300 S-1 ; Stop playback at end
  {% else %}
    RESPOND TYPE=error MSG='Error in _FINISH_BEEP: Number of tones does not equal number of durations'
  {% endif %}

######################################################################
# Start Print and End Print
######################################################################

[gcode_macro _START_PRINT]
gcode:
  #{% set BED_TEMP = params.BED_TEMP|default(printer.heater_bed.target)|int %} 
  #{% set HOTEND_TEMP = params.PRINT_TEMP|default(printer.extruder.target)|int %} 
  #M140 S{BED_TEMP} ;Start heating bed
  #RESPOND MSG='Waiting for extruder temp to get to {HOTEND_TEMP}...'
  #M117 Heating hotend...
  #M109 S{HOTEND_TEMP} ;Wait for extruder to reach temp before proceeding
  #RESPOND MSG='Waiting for bed temp to get to {BED_TEMP}...'
  #M117 Heating bed...
  #M190 S{BED_TEMP} ;Wait for bed to reach temp before proceeding
  _START_BEEP
  RESPOND MSG='Homing...'
  M117 Homing...
  G92 E0 ; Reset Extruder
  G28 ; Home all axes
  G90 ; Absolute Positioning
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  RESPOND MSG='Probing bed...'
  M117
  BED_MESH_CALIBRATE PROFILE=default
  BED_MESH_PROFILE LOAD=default
  G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X25 Y0 F3000 ; Move to purge position
  G1 E25 ; Purge nozzle
  G1 X0.1 F5000 ; Wipe
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
  
[gcode_macro _END_PRINT]
gcode:
  {% set ymax = printer.configfile.settings.stepper_y.position_max|int %}
  {% set RANDOM_X = (range(5, 80) | random) %}
  {% set RANDOM_Y = ymax - (range(0, 75) | random) %}
  {% set RANDOM_Z = (range(10, 85) | random) %}
  RESPOND MSG='Stowing at position {RANDOM_X}, {RANDOM_Y}, +{RANDOM_Z}'
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z{RANDOM_Z} ;Raise Z
  G90 ;Absolute positioning
  G1 X{RANDOM_X} Y{RANDOM_Y} ;Present print
  G92 E0 ; Reset Extruder
  G1 E5 ; Fill nozzle
  G1 E-10 ; Empty nozzle
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y E ;Disable all steppers but Z
  _FINISH_BEEP

######################################################################
# Stow and shutdown 
######################################################################

[gcode_macro POWER_OFF_PRINTER]
gcode:
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=1

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    SET_DISPLAY_GROUP GROUP=_blank
    {action_call_remote_method(
      "set_device_power", device="printer", state="off"
    )}
  {% else %}
    M117 { printer.idle_timeout.state }
    UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=1
  {% endif %}

[gcode_macro POWER_OFF_PI]
gcode:
  UPDATE_DELAYED_GCODE ID=delayed_pi_off DURATION=1

[delayed_gcode delayed_pi_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    SET_DISPLAY_GROUP GROUP=_blank
    {action_call_remote_method("shutdown_machine")}
  {% else %}
    M117 { printer.idle_timeout.state }
    UPDATE_DELAYED_GCODE ID=delayed_pi_off DURATION=1
  {% endif %}

#[idle_timeout]
#gcode:
#  M84
#  TURN_OFF_HEATERS
#  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[gcode_macro STOW]
gcode:
  CANCEL_PRINT
  {% set RANDOM_PARK_XY = (range(5, 30) | random) %}
  {% set RANDOM_PARK_Z = (range(5, 80) | random) %}
  RESPOND MSG='Stowing at position {RANDOM_PARK_XY}, {RANDOM_PARK_XY}, {RANDOM_PARK_Z}'
  M117 Stowing...
  {% if 'z' in printer.toolhead.homed_axes %}
    G91 ; Relative positioning
    G1 Z{RANDOM_PARK_Z} F3000 ; Move up 5
  {% endif %}
  G90 ; Absolute positioning
  {% if 'x' in printer.toolhead.homed_axes %}
    G1 X{RANDOM_PARK_XY} F3000; Move X to 5
  {% else %}
    G28 X ; Home X
  {% endif %}
  {% if 'yx' in printer.toolhead.homed_axes %}
    G1 Y{RANDOM_PARK_XY} F3000; Move Y to 5
  {% else %}
    G28 Y ; Home Y
  {% endif %}
  M400 ; Wait for moves to complete
  {% if 'z' not in printer.toolhead.homed_axes %}
    G28 Z ; Home Z
  {% endif %}
  G1 X{RANDOM_PARK_XY} Y{RANDOM_PARK_XY} Z{RANDOM_PARK_Z} F3000 ; Move any axes to RANDOM_PARK that aren't there yet
  M400 ; Wait for moves to complete
  M117  

[gcode_macro STOW_SHUTDOWN]
gcode:
  M106 S100 ;Fan on
  TURN_OFF_HEATERS
  STOW
  M117 Cooling down...
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=30
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=30
  M107 ;Turn-off fan
  SET_IDLE_TIMEOUT TIMEOUT=1
  POWER_OFF_PRINTER
#  SET_DISPLAY_GROUP GROUP=_blank ; Uncomment if no printer off command

######################################################################
# Filament Change
######################################################################

[pause_resume]

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(10)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    SET_IDLE_TIMEOUT TIMEOUT=3600 ; 1-hour timeout before printer loses homing
    PAUSE
    G91 ; Relative coordinates
    G1 E-6 F2700 ; Retract to prevent ooze
    G1 Z{Z} ; Z move
    G90 ; Absolute coordinates
    G1 X{X} Y{Y} F3000 ; XY Move
    G91 ; Relative coordinates
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

######################################################################
#
# Menu and screen customizations
#
######################################################################

# Display current position with lowercase axis labels instead of "Ready"
[display_template _print_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    {% set pos = printer.toolhead.position %}
    { "x%-4.0fy%-4.0fz%-5.2f" % (pos.x, pos.y, pos.z) }
  {% endif %}

# Blank screen for safe shutdown menu option
[display_data _blank main]
position: 0, 0
text: 

######################################################################
# Add "Cancel" to top of menu
######################################################################
[menu __main __cancel_print]
type: command
name: Cancel Print
enable: {printer.idle_timeout.state == "Printing"}
index: 1
gcode: CANCEL_PRINT
       {menu.exit()}

[menu __main __octoprint]
type: list
name: OctoPrint
index: 2
######################################################################
# Add "Prepare menu"
######################################################################
[menu __main __prepare]
type: list
name: Prepare
enable: {not printer.idle_timeout.state == "Printing"}
index: 3

[menu __main __prepare __bed_tramming]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed Tramming

[menu __main __prepare __bed_tramming __start]
type: command
name: Start
enable: {not printer.idle_timeout.state == "Printing"}
gcode: G28
       BED_SCREWS_ADJUST

[menu __main __prepare __bed_tramming __accept]
type: command
name: Accept
enable: {not printer.idle_timeout.state == "Printing"}
gcode: ACCEPT

[menu __main __prepare __bed_tramming __adjust]
type: command
name: Adjusted
enable: {not printer.idle_timeout.state == "Printing"}
gcode: ADJUSTED

[menu __main __prepare __bed_tramming __abort_screws]
type: command
name: Abort
enable: {not printer.idle_timeout.state == "Printing"}
gcode: ABORT

[menu __main __prepare __preheat]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Preheat

[menu __main __prepare __preheat __preheat_pla]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat PLA
gcode: M140 S50
       M104 S200
       {menu.exit()}

[menu __main __prepare __preheat __preheat_petg]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat PETG
gcode: M140 S70
       M104 S230
       {menu.exit()}

######################################################################
# Override ABS menu options with PETG, since the Ender 3 isn't great at printing ABS
######################################################################
[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S50
    M104 S200
    {menu.exit()}

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S50

[menu __main __temp __preheat_abs]
type: list
name: Preheat PETG

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S70
    M104 S230
    {menu.exit()}

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S230

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S70

######################################################################
# Add bed mesh to Calibration menu
######################################################################
[menu __main __setup __calib __bedmesh]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: Bed mesh
gcode: G28
       BED_MESH_CALIBRATE

[menu __main __setup __calib __meshclear]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: Clear mesh
gcode: BED_MESH_CLEAR

######################################################################
# Safe shutdown option that unloads limit switches
######################################################################
[menu __main __stow_shutdown]
type: list
enable: TRUE
name: Stow&Shutdown

[menu __main __stow_shutdown __stow]
type: command
enable: True
name: Cancel & Stow
gcode: {menu.exit()}
       STOW

[menu __main __stow_shutdown __shutdown]
type: command
enable: True
name: Safe shutdown
gcode: {menu.exit()}
       STOW_SHUTDOWN

######################################################################
#
# Mainsail code
#
######################################################################
[include mainsail.cfg]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x    : 5.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 5.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
#variable_retract         : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract  : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract   : 35.0  ; retract speed in mm/s
#variable_unretract       : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract : 35.0  ; unretract speed in mm/s
#variable_speed_hop       : 15.0  ; z move speed in mm/s
#variable_speed_move      : 100.0 ; move speed in mm/s
#variable_park_at_cancel  : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 
gcode:  {% set RANDOM_PARK = (range(5, 30) | random) %}
        SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=custom_park_x VALUE={RANDOM_PARK}
        SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=custom_park_y VALUE={RANDOM_PARK}
        {% set RANDOM_PARK = (range(5, 80) | random) %}
        SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=custom_park_dz VALUE={RANDOM_PARK}


[delayed_gcode _SET_CLIENT_VARIABLE]
initial_duration: 1
gcode: _CLIENT_VARIABLE


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.890
#*# pid_ki = 1.898
#*# pid_kd = 117.692
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.234
#*# pid_ki = 1.696
#*# pid_kd = 769.287
#*#
#*# [bltouch]
#*# z_offset = 2.900
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.216667, 0.386667, 0.500000, 0.501667
#*# 	  0.272500, 0.370000, 0.482500, 0.467500
#*# 	  0.311667, 0.401667, 0.500000, 0.422500
#*# 	  0.359167, 0.513333, 0.554167, 0.504167
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 50.0
#*# max_x = 185.0
#*# min_y = 50.0
#*# max_y = 185.0
