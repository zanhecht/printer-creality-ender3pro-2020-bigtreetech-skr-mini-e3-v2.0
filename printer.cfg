# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC2
position_endstop: 0.0
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
max_extrude_only_distance: 100.0                                
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 16
#rotation_distance: 34.406
rotation_distance: 32.789
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
pressure_advance: 0.5

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD8053046413014690143-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# Pin mappings for BL_T port
[bltouch]
stow_on_each_sample: False
probe_with_touch_mode: True
sensor_pin: ^PC14
control_pin: PA1
x_offset: -45.5
y_offset: -6.5
#z_offset: 0
samples: 3

[bed_screws]
screw1: 30, 30
screw2: 205, 30
screw3: 30, 205
screw4: 205, 205

[screws_tilt_adjust]
screw1: 91, 36.5
screw1_name: front left screw
screw2: 235, 36.5
screw2_name: front right screw
screw3: 91, 211.5
screw3_name: rear left screw
screw4: 235, 211.5
screw4_name: rear right screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M4

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 50, 50
mesh_max: 185, 185
probe_count: 4, 4
mesh_pps: 2, 2
algorithm: bicubic

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

# Gcode macros
[gcode_macro POWER_OFF_PRINTER]
gcode:
  SET_DISPLAY_GROUP GROUP=_blank
  {action_call_remote_method(
    "set_device_power", device="printer", state="off"
  )}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% else %}
    M117 { printer.idle_timeout.state }
    UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=1
  {% endif %}

#[idle_timeout]
#gcode:
#  M84
#  TURN_OFF_HEATERS
#  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[gcode_macro STOW]
gcode:
  M117 Stowing...
  G28 X Y; Home X/Y
  M400 ; Wait for moves to complete
  G28 Z ; Home Z
  G90 ; Absolute positioning
  G1 X5 Y5 Z5 F3000
  M400 ; Wait for moves to complete
  M117  

[gcode_macro STOW_SHUTDOWN]
gcode:
  M106 S100 ;Fan on
  TURN_OFF_HEATERS
  STOW
  M117 Cooling down...
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=30
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=30
  M107 ;Turn-off fan
  SET_IDLE_TIMEOUT TIMEOUT=1
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=1
#  SET_DISPLAY_GROUP GROUP=_blank ; Uncomment if no printer off command

# Display current position with lowercase axis labels instead of "Ready"
[display_template _print_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    {% set pos = printer.toolhead.position %}
    { "x%-4.0fy%-4.0fz%-5.2f" % (pos.x, pos.y, pos.z) }
  {% endif %}

# Blank screen for safe shutdown menu option
[display_data _blank main]
position: 0, 0
text: 

# Add "Prepare" menu
[menu __main __octoprint]
type: list
name: OctoPrint
index: 1

[menu __main __prepare]
type: list
name: Prepare
enable: {not printer.idle_timeout.state == "Printing"}
index: 2

[menu __main __prepare __bed_leveling]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed Level

[menu __main __prepare __bed_leveling __start]
type: command
name: Start
enable: {not printer.idle_timeout.state == "Printing"}
gcode: G28
       ADJUST_BED

[menu __main __prepare __bed_leveling __accept]
type: command
name: Accept
enable: {not printer.idle_timeout.state == "Printing"}
gcode: accept

[menu __main __prepare __bed_leveling __adjust]
type: command
name: Adjusted
enable: {not printer.idle_timeout.state == "Printing"}
gcode: adjusted

[menu __main __prepare __bed_leveling __abort_screws]
type: command
name: Abort
enable: {not printer.idle_timeout.state == "Printing"}
gcode: abort

[menu __main __prepare __preheat]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Preheat

[menu __main __prepare __preheat __preheat_pla]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat PLA
gcode: M140 S60
       M104 S200
       {menu.back()}

[menu __main __prepare __preheat __preheat_petg]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat PETG
gcode: M140 S70
       M104 S230
       {menu.back()}

# Override ABS menu options with PETG, since the Ender 3 isn't great at printing ABS
[menu __main __temp __preheat_abs]
type: list
name: Preheat PETG

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S70
    M104 S230
    {menu.back()}

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S230

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S70

# Add bed mesh to Calibration menu
[menu __main __setup __calib __bedmesh]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: Bed mesh
gcode: G28
       BED_MESH_CALIBRATE

[menu __main __setup __calib __meshclear]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: Clear mesh
gcode: BED_MESH_CLEAR

# Safe shutdown option that unloads limit switches
[menu __main __shutdown]
type: command
enable: True
name: Safe shutdown
gcode: {menu.exit()}
       STOW_SHUTDOWN
       
# Mainsail code
[include mainsail.cfg]

[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos  : False ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x   : 5.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y   : 5.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz  : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
#variable_retract         : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract  : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract   : 35.0  ; retract speed in mm/s
#variable_unretract       : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract : 35.0  ; unretract speed in mm/s
#variable_speed_hop       : 15.0  ; z move speed in mm/s
#variable_speed_move      : 100.0 ; move speed in mm/s
#variable_park_at_cancel  : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.890
#*# pid_ki = 1.898
#*# pid_kd = 117.692
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.234
#*# pid_ki = 1.696
#*# pid_kd = 769.287
#*#
#*# [bltouch]
#*# z_offset = 3.200
